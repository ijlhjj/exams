from unittest import TestCase

from exams.exams3.Exam244 import totalCost
from exams.test_util import read_nums_from_file


class Test(TestCase):

    def test_total_cost(self):
        self.assertEqual(11, totalCost([17, 12, 10, 2, 7, 2, 11, 20, 8], 3, 4))
        self.assertEqual(4, totalCost([1, 2, 4, 1], 3, 3))
        self.assertEqual(423,
                         totalCost([31, 25, 72, 79, 74, 65, 84, 91, 18, 59, 27, 9, 81, 33, 17, 58], 11, 2))  # 第2次提交答案错误
        self.assertEqual(95, totalCost(
            [50, 80, 34, 9, 86, 20, 67, 94, 65, 82, 40, 79, 74, 92, 84, 37, 19, 16, 85, 20, 79, 25, 89, 55, 67, 84, 3,
             79, 38, 16, 44, 2, 54, 58], 7, 12))  # 第3次提交答案错误
        self.assertEqual(2524501, totalCost(
            [6495, 4556, 4812, 1959, 7929, 2032, 9006, 4578, 7345, 3383, 1709, 8907, 4538, 1714, 5808, 560, 4756, 3806,
             726, 8888, 3557, 7095, 5746, 8481, 604, 8310, 3086, 735, 5083, 8139, 7185, 311, 4943, 321, 353, 9474, 733,
             6507, 5250, 3989, 6558, 6602, 5032, 979, 5516, 9519, 6414, 7275, 4983, 6742, 5120, 332, 364, 4944, 4484,
             3066, 2481, 1717, 5223, 8607, 6149, 9889, 5042, 6351, 945, 5236, 7738, 5817, 734, 4640, 5565, 9571, 977,
             7065, 7837, 6712, 3526, 2634, 8180, 4066, 6762, 4522, 2866, 9723, 3261, 7509, 9816, 7660, 9593, 6750, 8400,
             8392, 3561, 924, 9142, 7371, 8586, 4775, 6402, 3040, 668, 5606, 2111, 8953, 744, 4847, 8177, 2017, 6094,
             3264, 9009, 6435, 2671, 3423, 1731, 3123, 4115, 1266, 1399, 8198, 3459, 3213, 716, 6532, 3322, 8935, 7928,
             6968, 5394, 5876, 7942, 6602, 7227, 5497, 4042, 7933, 7844, 1565, 9948, 8130, 8111, 2442, 5835, 4739, 9334,
             1943, 7997, 4694, 1733, 4456, 67, 7111, 5399, 1286, 9403, 2944, 6855, 7971, 583, 1653, 7587, 8449, 2736,
             8211, 8268, 9477, 7914, 9860, 3835, 7525, 7276, 2080, 5344, 4271, 2341, 979, 8790, 8719, 2639, 2948, 7191,
             7658, 6517, 5105, 9038, 161, 3696, 3952, 5953, 2867, 7180, 837, 3215, 3364, 2140, 6582, 2390, 7411, 2104,
             3903, 8203, 1097, 452, 9090, 1033, 8918, 5087, 3847, 2511, 113, 5965, 3554, 9660, 5155, 7704, 2495, 9665,
             8174, 8702, 4439, 3017, 524, 3552, 5598, 1712, 8388, 8339, 386, 2438, 3364, 8952, 6164, 7045, 2924, 9692,
             6383, 5288, 8617, 6944, 9396, 920, 6236, 9570, 218, 2786, 8852, 2613, 2242, 2286, 5118, 9653, 6962, 6869,
             4282, 1505, 1664, 5842, 7035, 5889, 898, 3863, 5063, 3178, 3836, 8165, 9400, 6846, 8894, 9569, 1820, 2782,
             3143, 9505, 9666, 268, 5562, 3470, 4618, 4415, 402, 7114, 1401, 6217, 7393, 7378, 1603, 2640, 4797, 274,
             961, 5448, 2847, 5794, 2966, 2922, 3262, 6183, 8096, 9179, 3661, 3206, 1687, 2322, 8385, 6277, 8479, 808,
             6274, 4653, 1038, 8703, 2847, 1778, 3213, 6419, 5042, 9684, 3597, 5326, 20, 8241, 4071, 6206, 371, 8720,
             2411, 2665, 2682, 5356, 6538, 8817, 7824, 5719, 6874, 8861, 9359, 8062, 5144, 7201, 7182, 1083, 1968, 9888,
             7185, 8478, 5594, 3194, 2579, 492, 4625, 1165, 6248, 5753, 4543, 5768, 2776, 9016, 4437, 5342, 5874, 761,
             2576, 8634, 6011, 2806, 9730, 3479, 7705, 1052, 6161, 5434, 5998, 4790, 4290, 7819, 2263, 5303, 1105, 585,
             6659, 379, 3599, 7289, 9852, 8707, 5886, 6253, 8003, 7000, 8655, 9385, 1571, 8623, 7091, 8788, 3368, 4019,
             655, 9081, 7719, 7930, 9531, 4831, 8860, 9634, 6692, 984, 9054, 6193, 9189, 8642, 9015, 5530, 9282, 145,
             2668, 5340, 5789, 1737, 5888, 7599, 921, 9135, 4395, 9406, 5107, 5809, 1071, 2183, 6522, 8250, 7766, 765,
             8130, 1577, 210, 1342, 6365, 8078, 9486, 3800, 3223, 1528, 776, 6895, 365, 7248, 964, 7902, 2582, 6652,
             4925, 4768, 4319, 3433, 910, 9420, 4010, 381, 9263, 3289, 8804, 5924, 1261, 5307, 6808, 2376, 6730, 7680,
             5368, 9680, 6005, 5208, 521, 2691, 6162, 9814, 3961, 7562, 9309, 887, 2150, 3370, 4684, 1911, 1871, 4161,
             5480, 1849, 2168, 633, 4001, 71, 8858, 9915, 9386, 8521, 7788, 5843, 3249, 6587, 3417, 398, 2384, 1875,
             2749, 1623, 578, 7508, 1771, 1205, 7832, 2155, 4392, 7813, 4209, 1786, 7337, 7957, 1282, 4828, 3930, 4037,
             923, 1783, 7513, 2819, 8263, 2954, 6542, 8454, 4581, 9157, 8894, 3554, 1388, 2532, 3375, 5401, 7024, 9021,
             6050, 8748, 4647, 5330, 474, 9353, 8919, 5133, 6295, 7118, 7878, 8808, 3062, 3545, 8127, 2988, 44, 7850,
             3484, 8051, 6793, 6695, 5212, 5971, 8097, 5974, 3922, 8150, 17, 5067, 1894, 8325, 6888, 8727, 8355, 2845,
             4642, 5447, 3130, 547, 1709, 4999, 6622, 9288, 328, 6859, 7170, 7718, 664, 7421, 9258, 1450, 2534, 6103,
             6047, 5721, 5058, 8171, 5291, 9196, 6934, 2627, 2329, 9093, 6229, 5543, 5057, 7748, 8880, 4684], 545,
            482))  # 第4次提交答案错误

    # 第1次提交超时
    def test_total_cost1(self):
        costs = read_nums_from_file('resources/exams3_test_Exam244_1.txt')
        self.assertEqual(661946146, totalCost(costs, 35806, 87568))

    # 第5次提交超时
    def test_total_cost2(self):
        costs = read_nums_from_file('resources/exams3_test_Exam244_2.txt')
        self.assertEqual(128431147, totalCost(costs, 4967, 2277))
